diff --git a/node_modules/react-native-app-link/index.js b/node_modules/react-native-app-link/index.js
index 60a0bdf..a7ed6f7 100644
--- a/node_modules/react-native-app-link/index.js
+++ b/node_modules/react-native-app-link/index.js
@@ -2,9 +2,12 @@ import { Linking, Platform } from 'react-native';
 
 export const maybeOpenURL = async (
   url,
-  { appName, appStoreId, appStoreLocale, playStoreId }
+  { appName, appStoreId, appStoreLocale, playStoreId },
+  callbackfnwhennotinstalled
 ) => {
-  Linking.openURL(url).catch(err => {
+  try {
+    await Linking.openURL(url);  // Need to await Linking.openURL() to properly catch errors
+  } catch(err) {
     if (err.code === 'EUNSPECIFIED') {
       if (Platform.OS === 'ios') {
         // check if appStoreLocale is set
@@ -12,23 +15,25 @@ export const maybeOpenURL = async (
           ? 'us'
           : appStoreLocale;
 
-        Linking.openURL(`https://apps.apple.com/${locale}/app/${appName}/id${appStoreId}`);
+        await callbackfnwhennotinstalled();
+        await Linking.openURL(`https://apps.apple.com/${locale}/app/${appName}/id${appStoreId}`);  // Need to await Linking.openURL() to properly catch errors
+        throw new Error(`User has been prompted to install ${appName}.`);
       } else {
-        Linking.openURL(
-          `https://play.google.com/store/apps/details?id=${playStoreId}`
-        );
+        await callbackfnwhennotinstalled();
+        await Linking.openURL(`https://play.google.com/store/apps/details?id=${playStoreId}`);  // Need to await Linking.openURL() to properly catch errors
+        throw new Error(`User has been prompted to install ${appName}.`);
       }
     } else {
       throw new Error(`Could not open ${appName}. ${err.toString()}`);
     }
-  });
+  }
 };
 
 export const openInStore = async ({ appName, appStoreId, appStoreLocale = 'us', playStoreId }) => {
   if (Platform.OS === 'ios') {
-    Linking.openURL(`https://apps.apple.com/${appStoreLocale}/app/${appName}/id${appStoreId}`);
+    await Linking.openURL(`https://apps.apple.com/${appStoreLocale}/app/${appName}/id${appStoreId}`);
   } else {
-    Linking.openURL(
+    await Linking.openURL(
       `https://play.google.com/store/apps/details?id=${playStoreId}`
     );
   }
